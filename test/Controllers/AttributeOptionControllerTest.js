/*
 * AKKBLFPIM23Lib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io )
 */
 'use strict';

const chai = require('chai');
const assert = chai.assert;
const TestHelper = require("../TestHelper");
const APIHelper = require("../../lib/APIHelper");
const testerlib = require("../../lib");
const testConfiguration = require("../TestBootstrap");

const controller = testerlib.AttributeOptionController;
const AuthentificationByRefreshTokenRequest = testerlib.AuthentificationByRefreshTokenRequest;
const AuthentificationByPasswordRequest = testerlib.AuthentificationByPasswordRequest;


describe("AttributeOptionController Tests", function tests() {
    this.timeout(testConfiguration.TEST_TIMEOUT);

    /**
     * Assuming that the given codes are respectively the code of an existing attribute and an existing option of this attribute
     */
    it("should testAttributeOption response", function testAttributeOptionTest(done) {
        controller.getAttributeOption(function callback(error, response, context) {
            // test response code
            assert.equal(200, context.response.statusCode);
            done();
        });
    });

    /**
     * TODO: Add Description
     */
    it("should testAttributeOptions response", function testAttributeOptionsTest(done) {
        controller.getAttributeOptions(function callback(error, response, context) {
            // test response code
            assert.equal(200, context.response.statusCode);
            done();
        });
    });
});
